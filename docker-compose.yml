version: "3.3"

services:
  # name is optional for our mongodb
  local-mongo:
    # since mongo is an offical image we can use it.
    image: "mongo"

    # the port that we want to publish for mongodb
    ports:
      - "27017:27017"

    # our mongodb depends on volume to keep the data alive.
    volumes:
      - data:/data/db

    networks:
      - chat-network
    
  peer-server:
    image: "peerjs/peerjs-server"
    ports:
      - "9000:9000"

    networks:
      - chat-network

  # name is optional for our backend
  server:
    # it looks in this folder to find Dockerfile to build an image
    build: ./server
    # the port that we want to publish for backend
    ports:
      - "5000:5000"
      - "3001:3001"

    # depends_on means it will start our backend container once mongo-container is  up and running.
    depends_on:
      - local-mongo

    networks:
      - chat-network

  # name is optional for our frontend
  client:
    # to build an image based on Dockerfile
    # it looks in this folder to find Dockerfile to build an image
    build: ./client

    links:
      - server

    # the port that we want to publish for frontend
    ports:
      - "3000:3000"

    # add bind mount volume to keep have updated source code
    volumes:
      - ./client/src:/app/src
    # allow interactive mode
    stdin_open: true
    tty: true

    # it will start our frontend container once backend-container is  up and running.
    depends_on:
      - server
      - peer-server

    networks:
      - chat-network

# declare the volumes name that our app is using.
volumes:
  data:

networks:
  chat-network:
    driver: bridge